{"ast":null,"code":"var _jsxFileName = \"/Users/jms/Desktop/portfolio/bitPrice/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //const [data, setData] = useState([]);\n  //console.log('data: ', data);\n  //const intPrices = data.bpi\n  const [intPrices, setIntPrices] = useState([]);\n  console.log('1', intPrices);\n\n  const getPriceInfo = async () => {\n    const resp = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\n    const priceInfo = await resp.json();\n    setIntPrices(priceInfo); //const international = await priceInfo.bpi\n    //await setIntPrices(international)\n    ///const usdRate = await intPrices['USD'];\n    //console.log('USD Rate: ', usdRate);\n    //console.log(usdRate.code);\n    //console.log('priceInfo: ', priceInfo);\n    //setData(priceInfo);\n  };\n\n  console.log('2', intPrices.bpi);\n  useEffect(() => {\n    getPriceInfo();\n  }, []);\n  const mrWorldwide = intPrices.bpi;\n\n  if (mrWorldwide) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"bitcoin price\", console.log('3', mrWorldwide.USD) //intPrices.map((country) => (\n      // <div className=\"country\">{country.rate}</div>\n      //  ))}\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"bitcoin price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(App, \"ROe7Gp1+Grjp0vrA0SjjzH+3IvE=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 5\n}, this), document.getElementById('app'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jms/Desktop/portfolio/bitPrice/src/index.js"],"names":["React","useEffect","useState","ReactDOM","App","intPrices","setIntPrices","console","log","getPriceInfo","resp","fetch","priceInfo","json","bpi","mrWorldwide","USD","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd;AACA;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,SAAjB;;AAEA,QAAMI,YAAY,GAAG,YAAY;AAC/B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAAxB;AACA,UAAMC,SAAS,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAxB;AACAP,IAAAA,YAAY,CAACM,SAAD,CAAZ,CAH+B,CAK/B;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAZD;;AAaAL,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,SAAS,CAACS,GAA3B;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMM,WAAW,GAAGV,SAAS,CAACS,GAA9B;;AACA,MAAGC,WAAH,EAAe;AACX,wBAAO;AAAA,kCAGLR,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBO,WAAW,CAACC,GAA7B,CAHK,CAIP;AACF;AACA;AANS;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASH,GAVD,MAUM;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASD;AACF,CA/CD;;GAAMZ,G;;KAAAA,G;AAgDJD,QAAQ,CAACc,MAAT,eACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAFF","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n    //const [data, setData] = useState([]);\n    //console.log('data: ', data);\n    //const intPrices = data.bpi\n    const [intPrices, setIntPrices] = useState([]);\n    console.log('1', intPrices);\n    \n    const getPriceInfo = async () => {\n      const resp = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\n      const priceInfo = await resp.json();\n      setIntPrices(priceInfo);\n      \n      //const international = await priceInfo.bpi\n      //await setIntPrices(international)\n      ///const usdRate = await intPrices['USD'];\n      //console.log('USD Rate: ', usdRate);\n      //console.log(usdRate.code);\n      //console.log('priceInfo: ', priceInfo);\n      //setData(priceInfo);\n    }\n    console.log('2', intPrices.bpi);\n    useEffect(() => {\n      getPriceInfo();\n    }, []);\n\n    const mrWorldwide = intPrices.bpi;\n    if(mrWorldwide){\n        return <div>\n        bitcoin price \n      { \n          console.log('3', mrWorldwide.USD)\n        //intPrices.map((country) => (\n      // <div className=\"country\">{country.rate}</div>\n      //  ))}\n    }\n  </div>\n    } else{\n    return <div>\n        bitcoin price \n      { \n          //console.log('3', intPrices)\n        //intPrices.map((country) => (\n      // <div className=\"country\">{country.rate}</div>\n      //  ))}\n    }\n  </div>\n  }\n}\n  ReactDOM.render(\n    <App />,\n    document.getElementById('app'),\n  );"]},"metadata":{},"sourceType":"module"}